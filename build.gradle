buildscript {
  //apply from: 'https://raw.githubusercontent.com/FINTprosjektet/fint-buildscripts/master/dependencies.gradle'
  ext {
    springBootVersion = '2.0.3.RELEASE'

    gradleVersion = '4.5'
    springfoxLoaderVersion = '1.3.0'
    lombokVersion = '1.18.2'
    spockSpringVersion = '1.1-groovy-2.4'
    cglibVersion = '3.2.5'
    slf4jVersion = '1.7.25'
  }
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
  }
}

plugins {
  id 'com.github.ben-manes.versions' version '0.17.0'
  //id "com.gorylenko.gradle-git-properties" version "1.4.21"
  id 'com.github.ksoichiro.build.info' version '0.2.0'
}

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'maven'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'no.fint'
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
  mavenCentral()
  mavenLocal()
  jcenter()
  repositories {
    maven {
      url "http://dl.bintray.com/rfkikt/maven"
    }
  }
  repositories {
    maven {
      url "http://dl.bintray.com/fint/maven"
    }
  }
  mavenLocal()
  ////flatDir { dirs '../fint-kunde-portal-frontend/build/libs' }
}


dependencies {
  //compile name: 'fint-kunde-portal-frontend'
  compile('org.springframework.boot:spring-boot-starter-web')
  compile('org.springframework.boot:spring-boot-starter-actuator')
  compile('org.springframework.retry:spring-retry:1.2.2.RELEASE')


  //compile('pl.project13.maven:git-commit-id-plugin:2.2.4')
  //compile('org.springframework.ldap:spring-ldap-core:2.2.0.RELEASE')

  compile("com.github.springfox.loader:springfox-loader:${springfoxLoaderVersion}")
  compile('no.rogfk:spring-hateoas-hal-extension:0.0.6')
  compile('no.fint:fint-portal-api:3.0.0-rc-13')
  compile('org.apache.commons:commons-lang3:3.0')


  runtime('org.springframework.boot:spring-boot-devtools')

  compile("org.projectlombok:lombok:${lombokVersion}")

  testCompile('org.springframework.boot:spring-boot-starter-test')
  runtime('org.springframework.ldap:spring-ldap-test')
  runtime("com.unboundid:unboundid-ldapsdk:3.1.1")
  testCompile("org.spockframework:spock-core:${spockSpringVersion}")
}

/*
// run spring boot app (only applicable if run through an IDE)
tasks.withType(org.springframework.boot.gradle.run.BootRunTask) {
  if (project.hasProperty('url')) {
    println "Using Gradle project properties"
    systemProperty('url', "$url")
    systemProperty('user', "$user")
    systemProperty('password', "$password")
  } else {
    println "Using system environment variables"
  }
  classpath = sourceSets.main.runtimeClasspath
}

// run all task
task runAll {}
runAll.dependsOn(bootRun)
*/
