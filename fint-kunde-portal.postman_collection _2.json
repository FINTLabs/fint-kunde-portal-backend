{
	"info": {
		"name": "FINT Kunde Portal API",
		"_postman_id": "15c139ce-7fff-e49f-18f8-d99d56c20bc3",
		"description": "The FINT Customer Portal API manages an organisation's relationship to FINT and access to the organisation's data for adapters and clients.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "components",
			"description": "Components, or APIs, is the structure of which the FINT API and data model is organized.\n\nThey closely match the packages in the FINT data model.\n\nFor each innermost package in the FINT data model there will be a FINT API.  Its name corresponds to the package path, including parent package names.\n\nTypical components are:\n\n- Felles Kodeverk\n- Administrasjon Personal\n- Administrasjon Organisasjon\n- Utdanning Elev\n- Utdanning Timeplan\n",
			"item": [
				{
					"name": "Get all components",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d645f88f-869f-458d-8611-7416c1449260",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Component Personal found\", function () {",
									"    pm.response.to.have.status(200);",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData[0]).to.include({\"name\": \"administrasjon_personal\"})",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "http://localhost:8080/api/components",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"components"
							]
						},
						"description": "Provide a list of all FINT components."
					},
					"response": []
				},
				{
					"name": "Get component by name",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2a8c76ed-6ebb-4341-bdab-bea99fe20cf8",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "http://localhost:8080/api/components/administrasjon_personal",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"components",
								"administrasjon_personal"
							]
						},
						"description": "Get information on a single component (API)"
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "465a72d0-77fe-4450-894f-d744af08d72d",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "64faf12e-f3f6-4cfd-afe3-bf2cf68eac98",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "organisation",
			"description": "Organisations are the legal entities using FINT to expose their data for internal use.\n\nOrganisations manage their own properties, contacts (persons) who can represent the organisation legally in relation to FINT, and contacts that can modify technical relations to the assets, adapters and clients authorized to access the organization's data.",
			"item": [
				{
					"name": "Get organisation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8b9bd16a-5922-427d-b7be-2a1b7736b8f6",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Your test name\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.displayName).to.eql(\"Testing Limited\");",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "http://localhost:8080/api/organisations/testing/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"organisations",
								"testing",
								""
							]
						},
						"description": "Get organisation information."
					},
					"response": []
				},
				{
					"name": "Update organisation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f688fd3e-7bcc-476c-bbad-bff969ebd863",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Organisation Name Updated\", function () {",
									"    pm.response.to.have.status(200);",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.displayName).to.eql(\"Testing Unlimited\");",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"displayName\": \"Testing Unlimited\"\n}"
						},
						"url": {
							"raw": "http://localhost:8080/api/organisations/testing/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"organisations",
								"testing",
								""
							]
						},
						"description": "Update organisation information."
					},
					"response": []
				},
				{
					"name": "Link component",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fff1a5f7-6be5-42b5-8113-94fb69e81f05",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "http://localhost:8080/api/organisations/testing/components/administrasjon_personal",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"organisations",
								"testing",
								"components",
								"administrasjon_personal"
							]
						},
						"description": "Link a component (API) to the organisation, making it available for adapters and clients to interact."
					},
					"response": []
				},
				{
					"name": "Unlink component",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "acfe66d2-dbc7-4155-bc90-1855ab717c83",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "http://localhost:8080/api/organisations/testing/components/administrasjon_personal",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"organisations",
								"testing",
								"components",
								"administrasjon_personal"
							]
						},
						"description": "Remove component (API) from organisation.  All adapters and clients lose access to this component."
					},
					"response": []
				},
				{
					"name": "Set legal contact",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b7e679bb-5c5f-4508-8419-19d32c1ccb21",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "http://localhost:8080/api/organisations/testing/contacts/legal/12345678901",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"organisations",
								"testing",
								"contacts",
								"legal",
								"12345678901"
							]
						},
						"description": "Set organisation's legal contact."
					},
					"response": []
				},
				{
					"name": "Get   legal   contact",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "03b5075c-6a2f-44f9-8390-5ccee7d5c26f",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Verify Legal Contact by NIN\", function () {",
									"    pm.response.to.have.status(200);",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.nin).to.eql(\"12345678901\");",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "http://localhost:8080/api/organisations/testing/contacts/legal",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"organisations",
								"testing",
								"contacts",
								"legal"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Unset legal contact",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8cc1ca08-9de7-4ca3-95d9-dc93696de144",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "http://localhost:8080/api/organisations/testing/contacts/legal/12345678901",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"organisations",
								"testing",
								"contacts",
								"legal",
								"12345678901"
							]
						},
						"description": "Remove legal contact from organisation.\n\nWARNING: This contact will lose all access to the organisation!"
					},
					"response": []
				},
				{
					"name": "Get technical contacts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "http://localhost:8080/api/organisations/testing/contacts/technical",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"organisations",
								"testing",
								"contacts",
								"technical"
							]
						},
						"description": "Get a list of all the technical contacts associated with the organisation.\n\nTechnical contacts can perform all operations on the organisation except modifying contacts."
					},
					"response": []
				},
				{
					"name": "Add technical contact",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e1ea0fe9-110d-47bd-b01d-bbf755c13fdd",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "http://localhost:8080/api/organisations/testing/contacts/technical/23456789012",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"organisations",
								"testing",
								"contacts",
								"technical",
								"23456789012"
							]
						},
						"description": "Add a technical contact, identified by National Identity Number."
					},
					"response": []
				},
				{
					"name": "Remove technical contact",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "http://localhost:8080/api/organisations/testing/contacts/technical/23456789012",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"organisations",
								"testing",
								"contacts",
								"technical",
								"23456789012"
							]
						},
						"description": "Remove a technical contact, revoking the contact's permissions to access the customer portal for this organisation."
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "5d5ab195-6a63-4b2d-8fd2-dfab68c5c131",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "2be85390-e259-4b94-af3f-98ab1b6e7754",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "contacts",
			"description": "Contacts are physical persons identified by their National Identity Number through federated authentication providers like Idporten.\n\nContacts have details like name and contact information, and are linked to organisations.",
			"item": [
				{
					"name": "Get all contacts",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3cc7856a-b398-40c7-8677-1d8e156a45d4",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Should return two contacts\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.length).to.eql(2);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "http://localhost:8080/api/contacts",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"contacts"
							]
						},
						"description": "Get all contacts known to FINT."
					},
					"response": []
				},
				{
					"name": "Get contact by nin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "716bb8d8-06d9-4676-9cf4-e00b3fabb2d4",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Your test name\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.nin).to.eql(\"12345678901\");",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "http://localhost:8080/api/contacts/12345678901",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"contacts",
								"12345678901"
							]
						},
						"description": "Get information on a contact, identified by National Identity Number."
					},
					"response": []
				},
				{
					"name": "Update contact",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f5591e0a-68df-4c49-a02e-22efd5b4f652",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Contact is updated\", function () {",
									"    pm.response.to.have.status(200);",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.mail).to.eql(\"test123@example.com\");",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"nin\": \"12345678901\",\n    \"firstName\": \"Tore Martin\",\n    \"lastName\": \"Testesen\",\n    \"mail\": \"test123@example.com\",\n    \"mobile\": \"98765431\"\n}"
						},
						"url": {
							"raw": "http://localhost:8080/api/contacts/12345678901",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"contacts",
								"12345678901"
							]
						},
						"description": "Update information on a contact."
					},
					"response": []
				},
				{
					"name": "Create new contact",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b53619d4-7ca4-4230-8a02-557af71d02fb",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Contact is created\", function () {",
									"    pm.response.to.have.status(201);",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.nin).to.eql(\"00000000000\");",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"firstName\": \"John\",\r\n  \"lastName\": \"Doe\",\r\n  \"mail\": \"john.doe@example.com\",\r\n  \"mobile\": \"1-800-555-1212\",\r\n  \"nin\": \"00000000000\"\r\n}"
						},
						"url": {
							"raw": "http://localhost:8080/api/contacts",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"contacts"
							]
						},
						"description": "Create a new contact, identified by National Identity Number."
					},
					"response": []
				},
				{
					"name": "Delete a contact",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ebc56c3f-80ef-444b-baa6-634e14a81905",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "http://localhost:8080/api/contacts/00000000000",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"contacts",
								"00000000000"
							]
						},
						"description": "Remove a contact from FINT.\n\nWARNING: This contact will lose access to all organisations it is associated with!"
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "984a18f1-999f-4ead-b549-a4ede9038c6a",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "0b007ed9-00a8-4688-abfc-1d7830e39650",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "assets",
			"description": "Assets are subdomains of information within an organization.\n\nThey are named using the organization's DNS domain name, with one \"super\" asset representing the entire organisation, and optional \"subdomains\" for areas of information.\n\nTypical applications for multiple assets is if information of the same class is provided by multiple systems.  For instance, in context of mergers, there might be several HRM systems providing personnel information, one for the merged organisation, and two or more legacy systems for the previous organisations.\n\nLinking this information using subdomain assets makes it possible to present a combined view to clients.\n\nAssets are linked to adapters providing information, and clients who gain access to the information.",
			"item": [
				{
					"name": "Get all assets",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "054ed784-a81a-4345-a80a-bf8f195039c9",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "http://localhost:8080/api/assets/testing/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"assets",
								"testing",
								""
							]
						},
						"description": "Get a list of all assets registered to the organisation."
					},
					"response": []
				},
				{
					"name": "Create asset",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b235c9ae-9cb1-4b31-a1b2-c306f5f150ae",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"assetId\": \"test.no\",\r\n  \"description\": \"Test Norge AS\"\r\n}"
						},
						"url": {
							"raw": "http://localhost:8080/api/assets/testing/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"assets",
								"testing",
								""
							]
						},
						"description": "Create new asset.  The created asset must be a subdomain asset of an existing asset to this organisation.\n\nThe uppermost asset represents the entire organisation."
					},
					"response": []
				},
				{
					"name": "Get asset by name",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cd6ea447-6fc4-47b7-9b65-4b661ae252ee",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Asset exists\", function () {",
									"    pm.response.to.have.status(200);",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.description).to.eql(\"Test Norge AS\");",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "http://localhost:8080/api/assets/testing/test_no",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"assets",
								"testing",
								"test_no"
							]
						},
						"description": "Get asset information, identified by asset name."
					},
					"response": []
				},
				{
					"name": "Update asset",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "08c5e17a-c31c-4cf8-a1c7-ea1d74e57733",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Asset is updated\", function () {",
									"    pm.response.to.have.status(200);",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.description).to.eql(\"Test Mer Norge AS\");",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"assetId\": \"test.no\",\r\n  \"name\": \"test_no\",\r\n  \"description\": \"Test Mer Norge AS\"\r\n}"
						},
						"url": {
							"raw": "http://localhost:8080/api/assets/testing/test_no",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"assets",
								"testing",
								"test_no"
							]
						},
						"description": "Update asset information."
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "5a9f5eb6-f105-4a5c-b469-d052ada5d077",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "61059cf0-499f-4a0e-8f5d-1a5b70ef7b0b",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "adapters",
			"description": "Adapters are third party applications that provide data from back-end systems.\n\nThe access adapters are granted to the organisation is managed here.  Adapters are identified by OpenID Client ID and Client Secret, and is linked to the component and asset/s to which they are to provide information.",
			"item": [
				{
					"name": "Get all adapters",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e7ff165a-731a-4afd-ada5-e7deb2792d19",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "http://localhost:8080/api/adapters/testing",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"adapters",
								"testing"
							]
						},
						"description": "Get all adapters associated with the organisation."
					},
					"response": []
				},
				{
					"name": "Add adapter",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c7432ae5-9bf9-4a55-a1f2-164d86868a71",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"testAdapter\",\r\n  \"note\": \"Test Adapter\",\r\n  \"secret\": \"Open Sesame!\",\r\n  \"shortDescription\": \"This is a Test Adapter\"\r\n}"
						},
						"url": {
							"raw": "http://localhost:8080/api/adapters/testing",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"adapters",
								"testing"
							]
						},
						"description": "Add a new adapter. Password must be provided when creating a new adapter."
					},
					"response": []
				},
				{
					"name": "Get adapter",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "879cc77a-f7c3-4c7b-a059-f1b7410ba1ea",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Valid Adapter Found\", function () {",
									"    pm.response.to.have.status(200);",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.name).to.eql(\"testAdapter\");",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "http://localhost:8080/api/adapters/testing/testadapter",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"adapters",
								"testing",
								"testadapter"
							]
						},
						"description": "Get adapter details."
					},
					"response": []
				},
				{
					"name": "Get adapter secret",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2dcf0ef7-f1ce-41c8-aeee-88e97f1ab36b",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Client Secret Found\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "http://localhost:8080/api/adapters/testing/testadapter/secret",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"adapters",
								"testing",
								"testadapter",
								"secret"
							]
						},
						"description": "Get adapter's OAuth Client Secret."
					},
					"response": []
				},
				{
					"name": "Reset adapter password",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6492f572-2cc2-4d24-8c5e-75d260d9242a",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "text/plain"
							},
							{
								"key": "x-org-id",
								"value": "{{x-org-id}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "This is the new password"
						},
						"url": {
							"raw": "http://localhost:8080/api/adapters/testing/testadapter/password",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"adapters",
								"testing",
								"testadapter",
								"password"
							]
						},
						"description": "Update the adapter's password to the provided value."
					},
					"response": []
				},
				{
					"name": "Update adapter",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9279ad9f-5e38-4f04-858b-3b1cf4f6e09a",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Adapter is updated\", function () {",
									"    pm.response.to.have.status(200);",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.shortDescription).to.contain(\"Spanking\");",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"testadapter\",\r\n  \"note\": \"Test Adapter With New Note\",\r\n  \"shortDescription\": \"This is a Brand Spanking New Test Adapter\"\r\n}"
						},
						"url": {
							"raw": "http://localhost:8080/api/adapters/testing/testadapter",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"adapters",
								"testing",
								"testadapter"
							]
						},
						"description": "Update adapter information."
					},
					"response": []
				},
				{
					"name": "Add adapter to component",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fd487704-8871-47ba-9f91-b72fb64dc6bf",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "http://localhost:8080/api/components/administrasjon_personal/testing/adapters/testadapter",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"components",
								"administrasjon_personal",
								"testing",
								"adapters",
								"testadapter"
							]
						},
						"description": "Add adapter to component, enabling it to connect to a component to deliver data.\n\nAdapter must also be added to at least one asset."
					},
					"response": []
				},
				{
					"name": "Link adapter to asset",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0f90040d-092b-41eb-9fb8-2a50db92eeb3",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "http://localhost:8080/api/assets/testing/test_no/adapters/testadapter",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"assets",
								"testing",
								"test_no",
								"adapters",
								"testadapter"
							]
						},
						"description": "Link adapter to an asset, allowing it to provide data to that asset."
					},
					"response": []
				},
				{
					"name": "Unlink adapter from asset",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d19b1c4f-77b8-4ff3-b644-c4da46ff55df",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "http://localhost:8080/api/assets/testing/test_no/adapters/testadapter",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"assets",
								"testing",
								"test_no",
								"adapters",
								"testadapter"
							]
						},
						"description": "Unlink adapter from asset, removing the adapter's ability to deliver data for that asset."
					},
					"response": []
				},
				{
					"name": "Remove adapter from component",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "43a17fdf-a908-4c23-b648-c91d6d694d59",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "http://localhost:8080/api/components/administrasjon_personal/testing/adapters/testadapter",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"components",
								"administrasjon_personal",
								"testing",
								"adapters",
								"testadapter"
							]
						},
						"description": "Remove adapter from component, revoking the adapter's access to providing data for it."
					},
					"response": []
				},
				{
					"name": "Delete adapter",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ce52f570-3068-47db-b450-ffd694fbda5a",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "http://localhost:8080/api/adapters/testing/testadapter",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"adapters",
								"testing",
								"testadapter"
							]
						},
						"description": "Delete adapter from organisation, removing all access."
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "b832e899-7584-4d1c-9e17-b7bc1f842e06",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "e11c4286-4bb5-499c-99c3-7eea1642aa4f",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "clients",
			"description": "Clients represent the applications that have been granted access to the organisation's data through the FINT APIs.\n\nClients are identified by OAuth Client ID and Client Secret, and are linked to the components and asset that they are to be given access.",
			"item": [
				{
					"name": "Get all clients",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "16f24fdf-e5ff-4c6d-99bc-405f0d0d12d6",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "http://localhost:8080/api/clients/testing",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"clients",
								"testing"
							]
						},
						"description": "Get all clients associated with an organisation."
					},
					"response": []
				},
				{
					"name": "Add client",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0df1a367-905b-4884-8e0b-6278f17c4f04",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Client created\", function () {",
									"    pm.response.to.have.status(200);",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.name).to.eql(\"testclient\");",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"testclient\",\r\n  \"note\": \"Test Client\",\r\n  \"secret\": \"password\",\r\n  \"shortDescription\": \"This is a Test Client.\"\r\n}"
						},
						"url": {
							"raw": "http://localhost:8080/api/clients/testing",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"clients",
								"testing"
							]
						},
						"description": "Add a client to the organisation.  Password must be provided."
					},
					"response": []
				},
				{
					"name": "Get client",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2ab287c1-8727-483a-8a57-615d7feabf4a",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Client exists\", function () {",
									"    pm.response.to.have.status(200);",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.name).to.eql(\"testclient\");",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "http://localhost:8080/api/clients/testing/testclient",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"clients",
								"testing",
								"testclient"
							]
						},
						"description": "Get information on a given client."
					},
					"response": []
				},
				{
					"name": "Get client secret",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "535e6a26-27a7-4423-9d1c-ea26ec165bbe",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Client secret exists\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "http://localhost:8080/api/clients/testing/testclient/secret",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"clients",
								"testing",
								"testclient",
								"secret"
							]
						},
						"description": "Get client's OAuth Client Secret."
					},
					"response": []
				},
				{
					"name": "Update client",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0d821b23-5b49-42ba-94c9-607978e343e1",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Client is updated\", function () {",
									"    pm.response.to.have.status(200);",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.shortDescription).to.contain(\"updated\");",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"testclient\",\r\n  \"note\": \"Testing Client\",\r\n  \"shortDescription\": \"This is an updated Test Client.\"\r\n}"
						},
						"url": {
							"raw": "http://localhost:8080/api/clients/testing/testclient",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"clients",
								"testing",
								"testclient"
							]
						},
						"description": "Update client information."
					},
					"response": []
				},
				{
					"name": "Reset client password",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ffd8b880-e136-4f8e-b73a-daeaf40ffa1c",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "text/plain"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "This is an updated password."
						},
						"url": {
							"raw": "http://localhost:8080/api/clients/testing/testclient/password",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"clients",
								"testing",
								"testclient",
								"password"
							]
						},
						"description": "Reset client password to the provided value."
					},
					"response": []
				},
				{
					"name": "Add client to component",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0ffc5d49-1250-4e21-bae1-f32532ff496b",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "http://localhost:8080/api/components/administrasjon_personal/testing/clients/testclient",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"components",
								"administrasjon_personal",
								"testing",
								"clients",
								"testclient"
							]
						},
						"description": "Add a client to a component, granting it access to connect to it.\n\nClient must also be added to an asset to be able to retrieve data."
					},
					"response": []
				},
				{
					"name": "Link client to asset",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0a7675b6-ee3a-42b6-b3b5-b600680ce5e1",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "http://localhost:8080/api/assets/testing/test_no/clients/testclient",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"assets",
								"testing",
								"test_no",
								"clients",
								"testclient"
							]
						},
						"description": "Grant a client access to an asset. The asset linked will determine what data the client is able to retrieve."
					},
					"response": []
				},
				{
					"name": "Unlink client from asset",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "30b6d7bf-4da2-4d7d-a132-35e349a5b791",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "http://localhost:8080/api/assets/testing/test_no/clients/testclient",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"assets",
								"testing",
								"test_no",
								"clients",
								"testclient"
							]
						},
						"description": "Remove client's access to an asset.  The client will no longer be able to retrieve data."
					},
					"response": []
				},
				{
					"name": "Remove client from component",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "07e337fc-8341-4c48-891f-96b215d5d542",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "http://localhost:8080/api/components/administrasjon_personal/testing/clients/testclient",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"components",
								"administrasjon_personal",
								"testing",
								"clients",
								"testclient"
							]
						},
						"description": "Revoke client's access to a component.  The client will no longer be able to connect to that component."
					},
					"response": []
				},
				{
					"name": "Delete client",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "48f02c20-d30b-4665-83d5-848b24b3e8ef",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "http://localhost:8080/api/clients/testing/testclient",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"clients",
								"testing",
								"testclient"
							]
						},
						"description": "Delete client, revoking all access the client has to this organisation."
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "9731326c-aa59-456f-921b-0252295a4555",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "6b343f85-50af-4375-8246-a7bece8ce424",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "cleanup",
			"description": "",
			"item": [
				{
					"name": "Delete  contact",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8d4ed9b9-8d9c-4540-800d-d83dc1d92558",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "http://localhost:8080/api/contacts/00000000000",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"contacts",
								"00000000000"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Delete  adapter",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b0249588-c288-47f7-bf52-c8ff18d7fac5",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "http://localhost:8080/api/adapters/testing/testadapter",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"adapters",
								"testing",
								"testadapter"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Delete  client",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1ec86b6d-3b8e-4ddb-a7b1-73d819d80670",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "http://localhost:8080/api/clients/testing/testclient",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"clients",
								"testing",
								"testclient"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Delete   asset",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e03ee359-5508-4bc6-aed7-0c77a3e657de",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "http://localhost:8080/api/assets/testing/test_no",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"assets",
								"testing",
								"test_no"
							]
						},
						"description": ""
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "b974b444-d729-4f32-96ab-13ed28b974e5",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "6dbb1770-e113-4e6a-bc62-6cc0955f0ee1",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}